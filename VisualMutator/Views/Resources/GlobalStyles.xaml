<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Converters="clr-namespace:VisualMutator.Views.Converters"
                    x:Class="VisualMutator.Views.Resources.c__users_sysop_documents_visual_studio_2010_projects_visualmutator_visualmutator_views_resources_globalstyles_xaml">
  <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="Margin" Value="3" />
    <Setter Property="Padding" Value="15,0,15,0" />
    <Setter Property="Height" Value="23" />
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>

  <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
    <Setter Property="IsExpanded" Value="True" />
  </Style>

  <Style TargetType="Image">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Stretch" Value="None" />
    <Setter Property="Margin" Value="0,0,2,0" />
  </Style>
  <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
    <Setter Property="VerticalAlignment" Value="Center" />

    <Setter Property="Margin" Value="3,0,3,0" />
  </Style>
  <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Margin" Value="3" />
    <Setter Property="Height" Value="20" />
  </Style>
  <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Margin" Value="3,0,3,0" />
    <Setter Property="Height" Value="25" />
    <Setter Property="Padding" Value="3" />
  </Style>

  <Style TargetType="Rectangle">
    <Setter Property="Height" Value="10" />
    <Setter Property="Width" Value="10" />
    <Setter Property="Margin" Value="0,0,5,0" />
    <Setter Property="Stroke" Value="Black" />
  </Style>

  <LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#EEE" Offset="0.0" />
    <GradientStop Color="#CCC" Offset="1.0" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#CCC" Offset="0.0" />
    <GradientStop Color="#444" Offset="1.0" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
  <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFF" Offset="0.0" />
    <GradientStop Color="#AAA" Offset="1.0" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PressedBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#BBB" Offset="0.0" />
    <GradientStop Color="#EEE" Offset="0.1" />
    <GradientStop Color="#EEE" Offset="0.9" />
    <GradientStop Color="#FFF" Offset="1.0" />
  </LinearGradientBrush>

  <ControlTemplate x:Key="newToggleButtonControlTemplate" TargetType="{x:Type ToggleButton}">
    <Grid Background="{TemplateBinding Background}">
      <Rectangle
                x:Name="Rectangle"
                Margin="0,0,0,0"
                Fill="Transparent"
                Stroke="{DynamicResource NormalBorderBrush}" />
      <Path
                x:Name="Up_Arrow"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Fill="{DynamicResource GlyphBrush}"
                Data="M 0 0 L 4 4 L 8 0 Z" />
      <Path
                x:Name="Down_Arrow"
                Visibility="Collapsed"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Fill="{DynamicResource GlyphBrush}"
                Data="M 0 4 L 4 0 L 8 4 Z" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Fill" Value="{DynamicResource MouseOverBrush}" TargetName="Rectangle" />
      </Trigger>
      <Trigger Property="IsPressed" Value="true">
        <Setter Property="Fill" Value="{DynamicResource PressedBrush}" TargetName="Rectangle" />
      </Trigger>
      <Trigger Property="IsChecked" Value="true">
        <Setter Property="Visibility" Value="Visible" TargetName="Down_Arrow" />
        <Setter Property="Visibility" Value="Collapsed" TargetName="Up_Arrow" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="newExpanderStyle" TargetType="{x:Type Expander}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" x:Name="ContentRow" />
            </Grid.RowDefinitions>
            <Border
                            x:Name="Border"
                            Grid.Row="0"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2,2,0,0">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="20" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ToggleButton
                                    Template="{DynamicResource newToggleButtonControlTemplate}"
                                    Background="{TemplateBinding Background}"
                                    IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    OverridesDefaultStyle="True" />
                <ContentPresenter Grid.Column="1" Margin="4" RecognizesAccessKey="True"
                                                  ContentSource="Header" />
              </Grid>
            </Border>
            <Border
                            x:Name="ExpandSite"
                            Grid.Row="1"
                            Visibility="Collapsed"
                            BorderThickness="1,0,1,1"
                            CornerRadius="0,0,2,2">
              <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                Focusable="false" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Setter Property="Visibility" Value="Visible" TargetName="ExpandSite" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>